{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","count","setCount","onClick","prevCount","Math","floor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAmCeA,MAhCf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OACE,gCACE,6BAAKD,IACL,wBAAQE,QApBZ,WACED,GAAS,SAACE,GAAD,OAAeA,EAAY,MAmBlC,uBACA,wBAAQD,QAjBZ,WACED,GAAS,SAACE,GAAD,OAAeA,EAAY,MAgBlC,uBACA,wBAAQD,QAdZ,WACED,GAAS,SAACE,GAAD,OAA2B,EAAZA,MAatB,sBACA,wBAAQD,QAZZ,WACED,GAAS,SAACE,GAAD,OAAeC,KAAKC,MAAMF,EAAY,OAW7C,oBACA,wBAAQD,QAVZ,WACED,GAAS,SAACE,GAAD,OAA4B,MASnC,uBClBSG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d69a9a26.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [count, setCount] = useState(0);\n\n  function increment() {\n    setCount((prevCount) => prevCount + 1);\n  }\n\n  function decrement() {\n    setCount((prevCount) => prevCount - 1);\n  }\n\n  function multiply() {\n    setCount((prevCount) => prevCount * 2);\n  }\n  function divide() {\n    setCount((prevCount) => Math.floor(prevCount / 2));\n  }\n  function reset() {\n    setCount((prevCount) => (prevCount = 0));\n  }\n  return (\n    <div>\n      <h1>{count}</h1>\n      <button onClick={increment}>Increment</button>\n      <button onClick={decrement}>Decrement</button>\n      <button onClick={multiply}>Multiply</button>\n      <button onClick={divide}>Divide</button>\n      <button onClick={reset}>Reset</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}